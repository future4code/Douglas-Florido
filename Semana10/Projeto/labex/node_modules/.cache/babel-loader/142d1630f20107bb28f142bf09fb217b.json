{"ast":null,"code":"import axios from 'axios';\nexport const createLogin = async information => {\n  try {\n    console.log(information);\n    const emaildado = information.email;\n    const passworddado = information.password;\n    console.log(emaildado, passworddado);\n    const body = {\n      email: emaildado,\n      password: passworddado\n    };\n    const res = await axios.post('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/signup', body);\n    console.log(res);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport let verifyLogin = async (information, setLoginInfo) => {\n  const token = localStorage.getItem(\"token\");\n\n  try {\n    // console.log(information.email)\n    const email = information.email;\n    const password = information.password;\n    const body = {\n      email: email,\n      password: password\n    };\n    const res = await axios.post('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/login', body);\n    setLoginInfo(res);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const retrieveTripData = async information => {\n  try {\n    const res = await axios.get('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/trips');\n    information(res);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const populateTrips = async () => {\n  try {\n    const res = await axios.post('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/populate');\n    console.log(res);\n  } catch (err) {\n    console.log(err);\n  }\n}; // export const approvation = (candidateId, tripId, authentication) => {\n//     const body = {\n//         auth: authentication \n//     }\n//     axios.put(`https://us-central1-labenu-apis.cloudfunctions.net/labeX/${candidateId}/trips/${tripId}/candidates/:candidateId/decide`, body)\n//         .then((res) => { console.log(res) })\n//         .catch((err) => { console.log(err) })\n// }","map":{"version":3,"sources":["C:/Users/Ácido Florídrico/Desktop/Cursos/Labenu/Douglas-Florido/Semana10/Projeto/labex/src/Components/Requisitions/Requisitions.js"],"names":["axios","createLogin","information","console","log","emaildado","email","passworddado","password","body","res","post","err","verifyLogin","setLoginInfo","token","localStorage","getItem","retrieveTripData","get","populateTrips"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAOC,WAAP,IAAuB;AAC9C,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,UAAMG,SAAS,GAAGH,WAAW,CAACI,KAA9B;AACA,UAAMC,YAAY,GAAGL,WAAW,CAACM,QAAjC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAAuBE,YAAvB;AAEA,UAAME,IAAI,GAAG;AACTH,MAAAA,KAAK,EAAED,SADE;AAETG,MAAAA,QAAQ,EAAED;AAFD,KAAb;AAKA,UAAMG,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,iFAAX,EAA8FF,IAA9F,CAAlB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AAEH,GAdD,CAgBA,OAAOE,GAAP,EAAY;AAAET,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AAAkB;AACnC,CAlBM;AAqBP,OAAO,IAAIC,WAAW,GAAG,OAAOX,WAAP,EAAoBY,YAApB,KAAqC;AAC1D,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAI;AACA;AACA,UAAMX,KAAK,GAAGJ,WAAW,CAACI,KAA1B;AACA,UAAME,QAAQ,GAAGN,WAAW,CAACM,QAA7B;AAGA,UAAMC,IAAI,GAAG;AACTH,MAAAA,KAAK,EAAEA,KADE;AAETE,MAAAA,QAAQ,EAAEA;AAFD,KAAb;AAKA,UAAME,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,gFAAX,EAA6FF,IAA7F,CAAlB;AACAK,IAAAA,YAAY,CAACJ,GAAD,CAAZ;AACH,GAbD,CAcA,OAAOE,GAAP,EAAY;AAAET,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AAAkB;AACnC,CAjBM;AAqBP,OAAO,MAAMM,gBAAgB,GAAG,MAAOhB,WAAP,IAAuB;AACnD,MAAI;AAEA,UAAMQ,GAAG,GAAG,MAAMV,KAAK,CAACmB,GAAN,CAAU,gFAAV,CAAlB;AACAjB,IAAAA,WAAW,CAACQ,GAAD,CAAX;AAEH,GALD,CAKE,OAAOE,GAAP,EAAY;AAAET,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AAAkB;AACrC,CAPM;AASP,OAAO,MAAMQ,aAAa,GAAG,YAAY;AACrC,MAAI;AACA,UAAMV,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,mFAAX,CAAlB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AAEH,GAJD,CAKA,OAAOE,GAAP,EAAY;AAAET,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AAAkB;AACnC,CAPM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nexport const createLogin = async (information) => {\r\n    try {\r\n        console.log(information)\r\n        const emaildado = information.email\r\n        const passworddado = information.password\r\n        console.log(emaildado, passworddado)\r\n\r\n        const body = {\r\n            email: emaildado,\r\n            password: passworddado\r\n        }\r\n\r\n        const res = await axios.post('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/signup', body)\r\n        console.log(res)\r\n\r\n    }\r\n\r\n    catch (err) { console.log(err) }\r\n}\r\n\r\n\r\nexport let verifyLogin = async (information, setLoginInfo) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n        // console.log(information.email)\r\n        const email = information.email\r\n        const password = information.password\r\n\r\n\r\n        const body = {\r\n            email: email,\r\n            password: password\r\n        }\r\n\r\n        const res = await axios.post('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/login', body)\r\n        setLoginInfo(res)\r\n    }\r\n    catch (err) { console.log(err) }\r\n}\r\n\r\n\r\n\r\nexport const retrieveTripData = async (information) => {\r\n    try {\r\n\r\n        const res = await axios.get('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/trips')\r\n        information(res)\r\n\r\n    } catch (err) { console.log(err) }\r\n}\r\n\r\nexport const populateTrips = async () => {\r\n    try {\r\n        const res = await axios.post('https://us-central1-labenu-apis.cloudfunctions.net/labeX/douglas-florido/populate')\r\n        console.log(res)\r\n\r\n    }\r\n    catch (err) { console.log(err) }\r\n}\r\n\r\n\r\n// export const approvation = (candidateId, tripId, authentication) => {\r\n//     const body = {\r\n//         auth: authentication \r\n//     }\r\n//     axios.put(`https://us-central1-labenu-apis.cloudfunctions.net/labeX/${candidateId}/trips/${tripId}/candidates/:candidateId/decide`, body)\r\n//         .then((res) => { console.log(res) })\r\n//         .catch((err) => { console.log(err) })\r\n// }"]},"metadata":{},"sourceType":"module"}