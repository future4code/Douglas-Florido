{"ast":null,"code":"import { useEffect } from 'react';\n/**\n * A simple React hook for differentiating single and double clicks on the same component.\n *\n * @param {node} ref Dom node to watch for double clicks\n * @param {number} [latency=300] The amount of time (in milliseconds) to wait before differentiating a single from a double click\n * @param {function} onSingleClick A callback function for single click events\n * @param {function} onDoubleClick A callback function for double click events\n */\n\nvar useDoubleClick = function useDoubleClick(_ref) {\n  var ref = _ref.ref,\n      _ref$latency = _ref.latency,\n      latency = _ref$latency === void 0 ? 300 : _ref$latency,\n      _ref$onSingleClick = _ref.onSingleClick,\n      onSingleClick = _ref$onSingleClick === void 0 ? function () {\n    return null;\n  } : _ref$onSingleClick,\n      _ref$onDoubleClick = _ref.onDoubleClick,\n      onDoubleClick = _ref$onDoubleClick === void 0 ? function () {\n    return null;\n  } : _ref$onDoubleClick;\n  useEffect(function () {\n    var clickRef = ref.current;\n    var clickCount = 0;\n\n    var handleClick = function handleClick(e) {\n      clickCount += 1;\n      setTimeout(function () {\n        if (clickCount === 1) onSingleClick(e);else if (clickCount === 2) onDoubleClick(e);\n        clickCount = 0;\n      }, latency);\n    }; // Add event listener for click events\n\n\n    clickRef.addEventListener('click', handleClick); // Remove event listener\n\n    return function () {\n      clickRef.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nexport default useDoubleClick;","map":{"version":3,"sources":["../src/index.js"],"names":["useDoubleClick","ref","latency","onSingleClick","onDoubleClick","useEffect","clickRef","clickCount","handleClick","setTimeout"],"mappings":";AAEA;;;;;;;;;AAQA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAKjB;MAJJC,GAII,GAAA,IAAA,CAJJA,G;0BACAC,O;MAAAA,OAGI,GAAA,YAAA,KAAA,KAAA,CAAA,GAHM,GAGN,GAAA,Y;gCAFJC,a;MAAAA,aAEI,GAAA,kBAAA,KAAA,KAAA,CAAA,GAFY,YAAA;WAAA,I;AAEZ,GAAA,GAAA,kB;gCADJC,a;MAAAA,aACI,GAAA,kBAAA,KAAA,KAAA,CAAA,GADY,YAAA;WAAA,I;AACZ,GAAA,GAAA,kB;AACJC,EAAAA,SAAS,CAAC,YAAM;QACRC,QAAQ,GAAGL,GAAG,CAApB,O;QACIM,UAAU,GAAd,C;;QACMC,WAAW,GAAG,SAAdA,WAAc,CAAA,CAAA,EAAK;AACvBD,MAAAA,UAAU,IAAVA,CAAAA;AAEAE,MAAAA,UAAU,CAAC,YAAM;YACXF,UAAU,KAAd,C,EAAsBJ,aAAa,CAAnC,CAAmC,CAAbA,C,KACjB,IAAII,UAAU,KAAd,CAAA,EAAsBH,aAAa,CAAbA,CAAa,CAAbA;AAE3BG,QAAAA,UAAU,GAAVA,CAAAA;AAJQ,OAAA,EAAVE,OAAU,CAAVA;AANY,K,CAAA,CAAA;;;AAedH,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,OAAAA,EAfc,WAedA,EAfc,CAAA;;WAkBP,YAAM;AACXA,MAAAA,QAAQ,CAARA,mBAAAA,CAAAA,OAAAA,EAAAA,WAAAA;AADF,K;AAlBFD,GAAS,CAATA;AANF,CAAA","sourcesContent":["import { useEffect } from 'react';\n\n/**\n * A simple React hook for differentiating single and double clicks on the same component.\n *\n * @param {node} ref Dom node to watch for double clicks\n * @param {number} [latency=300] The amount of time (in milliseconds) to wait before differentiating a single from a double click\n * @param {function} onSingleClick A callback function for single click events\n * @param {function} onDoubleClick A callback function for double click events\n */\nconst useDoubleClick = ({\n  ref,\n  latency = 300,\n  onSingleClick = () => null,\n  onDoubleClick = () => null\n}) => {\n  useEffect(() => {\n    const clickRef = ref.current;\n    let clickCount = 0;\n    const handleClick = e => {\n      clickCount += 1;\n\n      setTimeout(() => {\n        if (clickCount === 1) onSingleClick(e);\n        else if (clickCount === 2) onDoubleClick(e);\n\n        clickCount = 0;\n      }, latency);\n    };\n\n    // Add event listener for click events\n    clickRef.addEventListener('click', handleClick);\n\n    // Remove event listener\n    return () => {\n      clickRef.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nexport default useDoubleClick;\n"]},"metadata":{},"sourceType":"module"}